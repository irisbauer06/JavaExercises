package mqtt;

import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;

import java.util.UUID;
import javax.swing.JOptionPane;

/**
 *
 * @author jerma
 */
public class MqttGUI extends javax.swing.JFrame
{
  private MqttClient client;

  /**
   * Creates new form MqttGUI
   */
  public MqttGUI()
  {
    initComponents();
    initMQTT();
  }

  private void initMQTT()
  {
    try
    {
      String clientId = UUID.randomUUID().toString();
      System.out.println("Generated Client ID: " + clientId);

      client = new MqttClient("tcp://localhost:1883", clientId); // Connect to local Mosquitto broker
      MqttConnectOptions options = new MqttConnectOptions();
      options.setCleanSession(true);
      client.connect(options);

      System.out.println("Connected to MQTT broker at localhost:1883");

      // Subscribe with QoS level 1 using a lambda expression for the listener
      client.subscribe("mqtt/chat", (topic, message) ->
      {
        String payload = new String(message.getPayload());
        System.out.println("Received message: " + payload); // Debugging
        jTextAreaReceiver.append(payload + "\n");
      });

      System.out.println("Subscribed to topic: mqtt/chat");

    }
    catch (MqttException e)
    {
      System.err.println("MQTT Exception: " + e.getMessage());
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jTextFileNickName = new javax.swing.JTextField();
    jButtonSender = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTextAreaReceiver = new javax.swing.JTextArea();
    jScrollPane2 = new javax.swing.JScrollPane();
    jTextAreaSender = new javax.swing.JTextArea();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("MQTT-Chat of smart-classroom-bhme20");

    jLabel1.setText("Nickname:");
    jPanel1.add(jLabel1);

    jTextFileNickName.setColumns(10);
    jPanel1.add(jTextFileNickName);

    jButtonSender.setText("Send");
    jButtonSender.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onSend(evt);
      }
    });
    jPanel1.add(jButtonSender);

    getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

    jPanel2.setLayout(new java.awt.GridLayout(2, 0));

    jScrollPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Chat"), javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4)));

    jTextAreaReceiver.setColumns(20);
    jTextAreaReceiver.setRows(5);
    jScrollPane1.setViewportView(jTextAreaReceiver);

    jPanel2.add(jScrollPane1);

    jScrollPane2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Message to be sent"), javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4)));

    jTextAreaSender.setColumns(20);
    jTextAreaSender.setRows(5);
    jScrollPane2.setViewportView(jTextAreaSender);

    jPanel2.add(jScrollPane2);

    getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void onSend(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onSend
  {//GEN-HEADEREND:event_onSend
    if (jTextFileNickName.getText().isEmpty())
    {
      JOptionPane.showMessageDialog(this, "Enter a nickname!",
        "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
    }
    else if (jTextAreaSender.getText().isEmpty())
    {
      JOptionPane.showMessageDialog(this, "Enter a message",
        "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
      String textToSend = jTextFileNickName.getText() + ": "
        + jTextAreaSender.getText();
      try
      {
        MqttMessage message = new MqttMessage(textToSend.getBytes());
        client.publish("mqtt/chat", message);
        System.out.println("Published message: " + textToSend); // Debugging
        jTextAreaSender.setText("");
      }
      catch (MqttException ex)
      {
        System.err.println("Publish Exception: " + ex.getMessage());
      }
    }
  }//GEN-LAST:event_onSend

  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(MqttGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }

    java.awt.EventQueue.invokeLater(() ->
    {
      new MqttGUI().setVisible(true);
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButtonSender;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTextArea jTextAreaReceiver;
  private javax.swing.JTextArea jTextAreaSender;
  private javax.swing.JTextField jTextFileNickName;
  // End of variables declaration//GEN-END:variables
}
