package ue06;

import javax.swing.JOptionPane;
import ue02.CuboidCalculator;

/**
 *
 * @author iris06
 */
public class QuaderGui extends javax.swing.JFrame
{

  /**
   * Creates new form QuaderGui
   */
  public QuaderGui()
  {
    initComponents();
    setLocationRelativeTo(null);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    jScroll = new javax.swing.JScrollPane();
    pMain = new javax.swing.JPanel();
    pButtons = new javax.swing.JPanel();
    jPanel1 = new javax.swing.JPanel();
    btVolumen = new javax.swing.JButton();
    btOberflaeche = new javax.swing.JButton();
    btRaumdiagonale = new javax.swing.JButton();
    btAlles = new javax.swing.JButton();
    btBeenden = new javax.swing.JButton();
    pContent = new javax.swing.JPanel();
    pEingang = new javax.swing.JPanel();
    lLaenge = new javax.swing.JLabel();
    lBreite = new javax.swing.JLabel();
    lHoehe = new javax.swing.JLabel();
    ftfLaenge = new javax.swing.JFormattedTextField();
    ftfBreite = new javax.swing.JFormattedTextField();
    ftfHoehe = new javax.swing.JFormattedTextField();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    pAusgang = new javax.swing.JPanel();
    lVolumen = new javax.swing.JLabel();
    lOberflaeche = new javax.swing.JLabel();
    lRaumdiagonale = new javax.swing.JLabel();
    ftfVolumen = new javax.swing.JFormattedTextField();
    ftfOberflaeche = new javax.swing.JFormattedTextField();
    ftfRaumdiagonale = new javax.swing.JFormattedTextField();
    jLabel7 = new javax.swing.JLabel();
    jLabel8 = new javax.swing.JLabel();
    jLabel9 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    addWindowListener(new java.awt.event.WindowAdapter()
    {
      public void windowClosing(java.awt.event.WindowEvent evt)
      {
        onWindowClosing(evt);
      }
    });

    pMain.setLayout(new java.awt.BorderLayout());

    pButtons.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));

    jPanel1.setLayout(new java.awt.GridLayout(0, 3, 5, 5));

    btVolumen.setText("Volumen berechnen");
    btVolumen.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onVolumenberechnen(evt);
      }
    });
    jPanel1.add(btVolumen);

    btOberflaeche.setText("Oberfläche berechnen");
    btOberflaeche.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onOberflaecheberechnen(evt);
      }
    });
    jPanel1.add(btOberflaeche);

    btRaumdiagonale.setText("Raumdiagonale berechnen");
    btRaumdiagonale.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onRaumdiagonaleberechnen(evt);
      }
    });
    jPanel1.add(btRaumdiagonale);

    btAlles.setText("alles Berechnen");
    btAlles.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onAlles(evt);
      }
    });
    jPanel1.add(btAlles);

    btBeenden.setText("Beenden");
    btBeenden.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onBeenden(evt);
      }
    });
    jPanel1.add(btBeenden);

    pButtons.add(jPanel1);

    pMain.add(pButtons, java.awt.BorderLayout.PAGE_END);

    pContent.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
    pContent.setLayout(new java.awt.GridLayout(0, 1));

    pEingang.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eingangsgrößen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1))); // NOI18N
    java.awt.GridBagLayout pEingangLayout = new java.awt.GridBagLayout();
    pEingangLayout.columnWidths = new int[] {0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0};
    pEingangLayout.rowHeights = new int[] {0, 8, 0, 8, 0};
    pEingang.setLayout(pEingangLayout);

    lLaenge.setText("Länge");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    pEingang.add(lLaenge, gridBagConstraints);

    lBreite.setText("Breite");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    pEingang.add(lBreite, gridBagConstraints);

    lHoehe.setText("                     Höhe");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    pEingang.add(lHoehe, gridBagConstraints);

    ftfLaenge.setColumns(10);
    ftfLaenge.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00"))));
    ftfLaenge.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    ftfLaenge.setValue(0.0);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    pEingang.add(ftfLaenge, gridBagConstraints);

    ftfBreite.setColumns(10);
    ftfBreite.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00"))));
    ftfBreite.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    ftfBreite.setValue(0.0);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    pEingang.add(ftfBreite, gridBagConstraints);

    ftfHoehe.setColumns(10);
    ftfHoehe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00"))));
    ftfHoehe.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    ftfHoehe.setValue(0.0);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    pEingang.add(ftfHoehe, gridBagConstraints);

    jLabel4.setText("m");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    pEingang.add(jLabel4, gridBagConstraints);

    jLabel5.setText("m");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 2;
    pEingang.add(jLabel5, gridBagConstraints);

    jLabel6.setText("m");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    pEingang.add(jLabel6, gridBagConstraints);

    pContent.add(pEingang);

    pAusgang.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ausgangsgrößen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14)), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1))); // NOI18N
    java.awt.GridBagLayout pAusgangLayout = new java.awt.GridBagLayout();
    pAusgangLayout.columnWidths = new int[] {0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0};
    pAusgangLayout.rowHeights = new int[] {0, 8, 0, 8, 0};
    pAusgang.setLayout(pAusgangLayout);

    lVolumen.setText("Volumen");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    pAusgang.add(lVolumen, gridBagConstraints);

    lOberflaeche.setText("Oberfläche");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    pAusgang.add(lOberflaeche, gridBagConstraints);

    lRaumdiagonale.setText("Raumdiagonale");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    pAusgang.add(lRaumdiagonale, gridBagConstraints);

    ftfVolumen.setEditable(false);
    ftfVolumen.setColumns(10);
    ftfVolumen.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00"))));
    ftfVolumen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    ftfVolumen.setFocusable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    pAusgang.add(ftfVolumen, gridBagConstraints);

    ftfOberflaeche.setEditable(false);
    ftfOberflaeche.setColumns(10);
    ftfOberflaeche.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00"))));
    ftfOberflaeche.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    ftfOberflaeche.setFocusable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    pAusgang.add(ftfOberflaeche, gridBagConstraints);

    ftfRaumdiagonale.setEditable(false);
    ftfRaumdiagonale.setColumns(10);
    ftfRaumdiagonale.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00"))));
    ftfRaumdiagonale.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    ftfRaumdiagonale.setFocusable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    pAusgang.add(ftfRaumdiagonale, gridBagConstraints);

    jLabel7.setText("m³");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    pAusgang.add(jLabel7, gridBagConstraints);

    jLabel8.setText("m²");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 2;
    pAusgang.add(jLabel8, gridBagConstraints);

    jLabel9.setText("m");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    pAusgang.add(jLabel9, gridBagConstraints);

    pContent.add(pAusgang);

    pMain.add(pContent, java.awt.BorderLayout.CENTER);

    jScroll.setViewportView(pMain);

    getContentPane().add(jScroll, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void onVolumenberechnen(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onVolumenberechnen
  {//GEN-HEADEREND:event_onVolumenberechnen
    try
    {
      double laenge = ((Number)ftfLaenge.getValue()).doubleValue();
      double breite = ((Number)ftfBreite.getValue()).doubleValue();
      double hoehe = ((Number)ftfHoehe.getValue()).doubleValue();
      
      final CuboidCalculator calculator = new CuboidCalculator(laenge, breite, hoehe);
      
      ftfVolumen.setValue(calculator.getVolume());
    }
    catch (Exception ex)
    {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
        "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
    }

  }//GEN-LAST:event_onVolumenberechnen

  private void onOberflaecheberechnen(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onOberflaecheberechnen
  {//GEN-HEADEREND:event_onOberflaecheberechnen
    try
    {
      double laenge = ((Number)ftfLaenge.getValue()).doubleValue();
      double breite = ((Number)ftfBreite.getValue()).doubleValue();
      double hoehe = ((Number)ftfHoehe.getValue()).doubleValue();
      
      final CuboidCalculator calculator = new CuboidCalculator(laenge, breite, hoehe);
      
      ftfOberflaeche.setValue(calculator.getSurface());
    }
    catch (Exception ex)
    {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
        "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
    }
  }//GEN-LAST:event_onOberflaecheberechnen

  private void onRaumdiagonaleberechnen(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onRaumdiagonaleberechnen
  {//GEN-HEADEREND:event_onRaumdiagonaleberechnen
    try
    {
      final double laenge = ((Number)ftfLaenge.getValue()).doubleValue();
      double breite = ((Number)ftfBreite.getValue()).doubleValue();
      double hoehe = ((Number)ftfHoehe.getValue()).doubleValue();
      
      final CuboidCalculator calculator = new CuboidCalculator(laenge, breite, hoehe);
      
      ftfRaumdiagonale.setValue(calculator.getSpaceDiagonale());
    }
    catch (Exception ex)
    {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
        "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
    }
  }//GEN-LAST:event_onRaumdiagonaleberechnen
 
  private void onX() 
  {
    if(JOptionPane.showConfirmDialog(this, "Wirklich beenden?",
      "Sicherheitsabfrage", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
      dispose();
    
  }
  
  private void onBeenden(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onBeenden
  {//GEN-HEADEREND:event_onBeenden
    onX();
  }//GEN-LAST:event_onBeenden

  private void onAlles(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onAlles
  {//GEN-HEADEREND:event_onAlles
    try
    {
      double laenge = ((Number)ftfLaenge.getValue()).doubleValue();
      double breite = ((Number)ftfBreite.getValue()).doubleValue();
      double hoehe = ((Number)ftfHoehe.getValue()).doubleValue();
      
      final CuboidCalculator calculator = new CuboidCalculator(laenge, breite, hoehe);
      
      ftfRaumdiagonale.setValue(calculator.getSpaceDiagonale());
      ftfOberflaeche.setValue(calculator.getSurface());
      ftfVolumen.setValue(calculator.getVolume());
    }
    catch (Exception ex)
    {
            JOptionPane.showMessageDialog(this, ex.getMessage(),
        "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
    }
  }//GEN-LAST:event_onAlles

  private void onWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_onWindowClosing
  {//GEN-HEADEREND:event_onWindowClosing
    onX();
  }//GEN-LAST:event_onWindowClosing

  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(QuaderGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(QuaderGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(QuaderGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(QuaderGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run()
      {
        new QuaderGui().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btAlles;
  private javax.swing.JButton btBeenden;
  private javax.swing.JButton btOberflaeche;
  private javax.swing.JButton btRaumdiagonale;
  private javax.swing.JButton btVolumen;
  private javax.swing.JFormattedTextField ftfBreite;
  private javax.swing.JFormattedTextField ftfHoehe;
  private javax.swing.JFormattedTextField ftfLaenge;
  private javax.swing.JFormattedTextField ftfOberflaeche;
  private javax.swing.JFormattedTextField ftfRaumdiagonale;
  private javax.swing.JFormattedTextField ftfVolumen;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScroll;
  private javax.swing.JLabel lBreite;
  private javax.swing.JLabel lHoehe;
  private javax.swing.JLabel lLaenge;
  private javax.swing.JLabel lOberflaeche;
  private javax.swing.JLabel lRaumdiagonale;
  private javax.swing.JLabel lVolumen;
  private javax.swing.JPanel pAusgang;
  private javax.swing.JPanel pButtons;
  private javax.swing.JPanel pContent;
  private javax.swing.JPanel pEingang;
  private javax.swing.JPanel pMain;
  // End of variables declaration//GEN-END:variables
}
