/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ue08.data;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import ue08.calc.PytTripRechner;

/**
 *
 * @author iris06
 */
public class PytripGui extends javax.swing.JFrame
{

  /**
   * Creates new form PytripGui
   */
  public PytripGui()
  {
    initComponents();
    setLocationRelativeTo(null);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    pMain = new javax.swing.JPanel();
    progressBar = new javax.swing.JProgressBar();
    pWest = new javax.swing.JPanel();
    pEingabe = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    jLabel1 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    spObergrenze = new javax.swing.JSpinner();
    jLabel4 = new javax.swing.JLabel();
    tfErgebnisse = new javax.swing.JFormattedTextField();
    tfDauer = new javax.swing.JFormattedTextField();
    pBefehle = new javax.swing.JPanel();
    pButton = new javax.swing.JPanel();
    btBerechnen = new javax.swing.JButton();
    btLoeschen = new javax.swing.JButton();
    btBeenden = new javax.swing.JButton();
    pList = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    listenfeld = new javax.swing.JList<>();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Pythagoräische Tripel V0.1");
    addWindowListener(new java.awt.event.WindowAdapter()
    {
      public void windowClosing(java.awt.event.WindowEvent evt)
      {
        onWindowClosing(evt);
      }
    });
    getContentPane().setLayout(new java.awt.BorderLayout(8, 8));

    pMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
    pMain.setLayout(new java.awt.BorderLayout(8, 8));

    progressBar.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
    progressBar.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
    pMain.add(progressBar, java.awt.BorderLayout.PAGE_END);

    pWest.setLayout(new java.awt.BorderLayout());

    pEingabe.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Ein &- Ausgabe"), javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8)));
    java.awt.GridBagLayout pEingabeLayout = new java.awt.GridBagLayout();
    pEingabeLayout.columnWidths = new int[] {0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0};
    pEingabeLayout.rowHeights = new int[] {0, 8, 0, 8, 0};
    pEingabe.setLayout(pEingabeLayout);

    jLabel2.setText("Obergrenze");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pEingabe.add(jLabel2, gridBagConstraints);

    jLabel1.setText("Ergebnisse");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pEingabe.add(jLabel1, gridBagConstraints);

    jLabel3.setText("Dauer");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pEingabe.add(jLabel3, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pEingabe.add(spObergrenze, gridBagConstraints);

    jLabel4.setText("ms");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 4;
    pEingabe.add(jLabel4, gridBagConstraints);

    tfErgebnisse.setEditable(false);
    tfErgebnisse.setColumns(10);
    tfErgebnisse.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
    tfErgebnisse.setValue(0.00);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    pEingabe.add(tfErgebnisse, gridBagConstraints);

    tfDauer.setEditable(false);
    tfDauer.setColumns(10);
    tfDauer.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
    tfDauer.setValue(0.00);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    pEingabe.add(tfDauer, gridBagConstraints);

    pWest.add(pEingabe, java.awt.BorderLayout.PAGE_START);

    pBefehle.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Befehle"), javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8)));

    pButton.setLayout(new java.awt.GridLayout(0, 1, 5, 5));

    btBerechnen.setBackground(new java.awt.Color(255, 255, 0));
    btBerechnen.setForeground(new java.awt.Color(0, 0, 0));
    btBerechnen.setText("Berechnen");
    btBerechnen.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onBerechnen(evt);
      }
    });
    pButton.add(btBerechnen);

    btLoeschen.setBackground(new java.awt.Color(204, 204, 0));
    btLoeschen.setForeground(new java.awt.Color(0, 0, 0));
    btLoeschen.setText("Löschen");
    btLoeschen.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onLoeschen(evt);
      }
    });
    pButton.add(btLoeschen);

    btBeenden.setBackground(new java.awt.Color(255, 153, 153));
    btBeenden.setForeground(new java.awt.Color(0, 0, 0));
    btBeenden.setText("Beenden");
    btBeenden.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onBeenden(evt);
      }
    });
    pButton.add(btBeenden);

    pBefehle.add(pButton);

    pWest.add(pBefehle, java.awt.BorderLayout.SOUTH);

    pMain.add(pWest, java.awt.BorderLayout.LINE_START);

    pList.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Liste der pythagoräischen Tripel"), javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8)));
    pList.setLayout(new java.awt.BorderLayout());

    listenfeld.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
    jScrollPane1.setViewportView(listenfeld);

    pList.add(jScrollPane1, java.awt.BorderLayout.CENTER);

    pMain.add(pList, java.awt.BorderLayout.CENTER);

    getContentPane().add(pMain, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private class PytTripWorker extends SwingWorker<PytTripRechner, Object> {
    
    private final int obergrenze;
    public PytTripWorker(int obergrenze)
    {
      this.obergrenze = obergrenze;
    }
    
    @Override
    protected PytTripRechner doInBackground() throws Exception
    {
      return new PytTripRechner(obergrenze);
    }
    
    @Override
    protected void done()
    {
      try
      {
        btBerechnen.setEnabled(true);
        progressBar.setIndeterminate(false);
        progressBar.setStringPainted(false);
        final PytTripRechner rechner = get(); //Rechnen
        tfDauer.setValue(rechner.getMillis());
        final List<PytTrip> pytTrips = rechner.getPytTrips(); //Liste aus rechnerklasse holen
        tfErgebnisse.setValue(pytTrips.size()); //anzahl der ergebnisse ausgeben
        listenfeld.setModel (new PytTripListModel(pytTrips)); //neues listenmodell
        pack();

      }
      catch (InterruptedException ex){ }
      catch (ExecutionException ex)
      {
        JOptionPane.showMessageDialog(PytripGui.this, ex.getCause().getMessage(),
          "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
      }
    }
  }
    
  private void onBerechnen(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onBerechnen
  {//GEN-HEADEREND:event_onBerechnen
    try
    {
      btBerechnen.setEnabled(false);
      progressBar.setIndeterminate(true);
      progressBar.setString("Sinking ...");
      progressBar.setStringPainted(true);
      loeschen();
      final int obergrenze = ((Number)spObergrenze.getValue()).intValue(); //Obergrenze auslesen  
      new PytTripWorker(obergrenze).execute();
    }
    catch (Exception ex)
    {
      JOptionPane.showMessageDialog(this, ex.getMessage(),
        "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
    }
  }//GEN-LAST:event_onBerechnen

  private void loeschen()
  {
    tfDauer.setValue(0);
    tfErgebnisse.setValue(0);
    listenfeld.setModel(new PytTripListModel(new ArrayList<>()));
  }
  private void onLoeschen(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onLoeschen
  {//GEN-HEADEREND:event_onLoeschen
    loeschen();
  }//GEN-LAST:event_onLoeschen

  private void onBeenden(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onBeenden
  {//GEN-HEADEREND:event_onBeenden
    onX();
  }//GEN-LAST:event_onBeenden

  private void onWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_onWindowClosing
  {//GEN-HEADEREND:event_onWindowClosing
   onX();
  }//GEN-LAST:event_onWindowClosing

  private void onX()
  {
    if (JOptionPane.showConfirmDialog(this, "Wirklich beenden?",
      "Sicherheitsabfrage", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
      dispose();
  }
  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(PytripGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(PytripGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(PytripGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(PytripGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run()
      {
        new PytripGui().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btBeenden;
  private javax.swing.JButton btBerechnen;
  private javax.swing.JButton btLoeschen;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JList<ue08.data.PytTrip> listenfeld;
  private javax.swing.JPanel pBefehle;
  private javax.swing.JPanel pButton;
  private javax.swing.JPanel pEingabe;
  private javax.swing.JPanel pList;
  private javax.swing.JPanel pMain;
  private javax.swing.JPanel pWest;
  private javax.swing.JProgressBar progressBar;
  private javax.swing.JSpinner spObergrenze;
  private javax.swing.JFormattedTextField tfDauer;
  private javax.swing.JFormattedTextField tfErgebnisse;
  // End of variables declaration//GEN-END:variables
}
