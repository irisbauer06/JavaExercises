/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ue11.gui;

import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;
import ue11.data.*;

/**
 *
 * @author leonb
 */
public class WetterDialog extends javax.swing.JDialog
{

  // *** Datenaustausch ***
  private Messung messung = null;
  private boolean pressedOk = false;
  

  public WetterDialog(java.awt.Frame parent, boolean modal)
  {
    super(parent, modal);
    initComponents();
    fillComboBoxes();
    setLocationRelativeTo(parent);
  }
  
  private void fillComboBoxes()
  {
    // Sensor
    cbSensor.removeAllItems(); // "Defensives Programmieren"
    for (Sensor sensor : Sensor.values())
      cbSensor.addItem(sensor);
  }
  
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */   
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    pMain = new javax.swing.JPanel();
    pSouth = new javax.swing.JPanel();
    btUebernehmen = new javax.swing.JButton();
    btAbbrechen = new javax.swing.JButton();
    pCenter = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    spDate = new javax.swing.JSpinner();
    tfMesswert = new javax.swing.JFormattedTextField();
    cbSensor = new javax.swing.JComboBox<>();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Messung hinzufügen");

    pMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
    pMain.setLayout(new java.awt.BorderLayout());

    pSouth.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
    pSouth.setLayout(new java.awt.GridLayout(1, 2, 8, 0));

    btUebernehmen.setText("Übernehmen");
    btUebernehmen.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onOk(evt);
      }
    });
    pSouth.add(btUebernehmen);

    btAbbrechen.setText("Abbrechen");
    btAbbrechen.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        onCancel(evt);
      }
    });
    pSouth.add(btAbbrechen);

    pMain.add(pSouth, java.awt.BorderLayout.PAGE_END);

    pCenter.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
    java.awt.GridBagLayout pCenterLayout = new java.awt.GridBagLayout();
    pCenterLayout.columnWidths = new int[] {0, 8, 0};
    pCenterLayout.rowHeights = new int[] {0, 8, 0, 8, 0};
    pCenter.setLayout(pCenterLayout);

    jLabel1.setText("Datum");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pCenter.add(jLabel1, gridBagConstraints);

    jLabel2.setText("Messwert");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pCenter.add(jLabel2, gridBagConstraints);

    jLabel3.setText("Sensor");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pCenter.add(jLabel3, gridBagConstraints);

    spDate.setModel(new javax.swing.SpinnerDateModel());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pCenter.add(spDate, gridBagConstraints);

    tfMesswert.setColumns(10);
    tfMesswert.setValue(0.0);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pCenter.add(tfMesswert, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    pCenter.add(cbSensor, gridBagConstraints);

    pMain.add(pCenter, java.awt.BorderLayout.CENTER);

    getContentPane().add(pMain, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents
  
  private Messung createMessung()
    throws Exception
  {
    final long millis = ((Date)spDate.getValue()).getTime();
    final LocalDate date= Instant.ofEpochMilli(millis).atZone(ZoneId.systemDefault()).toLocalDate();
    
    return new Messung(date, ((Number)tfMesswert.getValue()).doubleValue(), (Sensor)cbSensor.getSelectedItem());
  }
  
  
  
  private void onOk(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onOk
  {//GEN-HEADEREND:event_onOk
    
    try
    {
      messung = createMessung();
      pressedOk = true;
      dispose();
    }
    catch (Exception ex)
    {
      JOptionPane.showMessageDialog(this, ex.getMessage(),
        "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
    }
    
  }//GEN-LAST:event_onOk

  private void onCancel(java.awt.event.ActionEvent evt)//GEN-FIRST:event_onCancel
  {//GEN-HEADEREND:event_onCancel
    dispose();
  }//GEN-LAST:event_onCancel
  
  public boolean pressedOk()
  {
    return pressedOk;
  }
  
  public Messung getErzeugung()
  {
    return messung;
  }
  
  
  
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(WetterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(WetterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(WetterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(WetterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run()
      {
        WetterDialog dialog = new WetterDialog(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter()
        {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e)
          {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btAbbrechen;
  private javax.swing.JButton btUebernehmen;
  private javax.swing.JComboBox<Sensor> cbSensor;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JPanel pCenter;
  private javax.swing.JPanel pMain;
  private javax.swing.JPanel pSouth;
  private javax.swing.JSpinner spDate;
  private javax.swing.JFormattedTextField tfMesswert;
  // End of variables declaration//GEN-END:variables

  
}
